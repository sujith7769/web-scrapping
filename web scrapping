  
#web scrapping
import request6s
from bs4 import Beautiful
import pandas
import argparse
import connect

parser = argparse.ArgumentParser()
parser.add_argument("--page_num_max", help="Enter the number of pages to parse", type=int)
parser.add_argument("--dbname", help="Enter the number of pages tp parse", type=int)
args = parser.parse_args()

oyo_url = "https://www.oyorooms.com/hotels-in-bangalore/?page="
page_num_MAX = 3
scrapped_info_list = []
connect.connect(args.dbname)

for page_num in range(1,page_num_MAX):
    url = oyo_url + str(page_num)
    print("GET Request for:"+)
    req = requests.get(otyo_url + str(page_num))
    content = req.content
    
    soup = BeautifulSoup(content, "html.parser")
    
    all_hotels = soup.find_all("div", {"class": "hotelCardListing"})
    scraped_info_list = []
    
    for hotel in all_hotels:
        hotel_dict = {}
        hotel_dict["name"] = hotel.find("h3, {"class: "ListingHotelDescription_hotelName"}).text
        hotel_dict["address"] = hotel.find("span", {"itemprop": "streetAddresss"}).text
        hotel_dict["price"] = hotel.find("span", {"class": "ListeningPrice_finalprice"}).text
        #try ....expect
        try:
            hotel_dict["rating"] = hotel.find("span", {"class": "hotelRating_ratingSummary"}).text
        expect AttributeError:
            hotel_dict["rating"] = None
            
        parent_amenities_element = hotel.find("div", {"class": "amenityWrapper"})
        
        amenities_list = []
        for amenity in parent_amenities_element.find_all("div", {"class"; "amenityWrapper_amenity"}):
            aminities_list.append(ammenity.find("span", {"class": "d-body-sm"}).text.strip())
            
       hotel_dict["amenities"] = ','.join(amenities_list[-1])
       
       scrapped_info_list.append(hotel_dict)
       connect.insert_into_table(args.dbname, tuple(hotel_dict.values()))
       
       #print(hotel_name,hotel_address,hotel_price,hotel_rating,amenities list)
       
 dataFrame = pandas.DataFrame(scraped_info_list)
 dataFrame.to.csv("oyo.csv")
 connect.get_hotel_info(args.dbname)
 
